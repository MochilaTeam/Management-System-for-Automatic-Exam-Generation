# Gesti칩n para la generaci칩n autom치tica de ex치menes  
**Bases de Datos II - Ingenier칤a de Software**  

**Curso:** 2025 - 2026  

El presente documento describe una problem치tica para ser resuelta durante el semestre. Presenta adem치s, particulares a evaluar por cada asignatura de manera independiente y en conjunto.  

---

## Caracter칤sticas generales  

El proyecto tributa a la evaluaci칩n de las asignaturas **Bases de Datos II** e **Ingenier칤a de Software**, donde cada una controlar치 aspectos no necesariamente coincidentes.  

El desarrollo de la soluci칩n ser치 llevado a cabo por un equipo de estudiantes de hasta 5 integrantes, aunque la cantidad exacta de miembros se confirmar치 durante las primeras clases presenciales.  

La nota de cada miembro del equipo ser치 **individual** y no necesariamente la misma para ambas asignaturas, teniendo en cuenta:  

- Labor de curso.  
- Trabajo del equipo.  
- Requisitos particulares de la asignatura de Bases de Datos (ver archivo adjunto).  
- Requisitos particulares de la asignatura de Ingenier칤a de Software (al final del documento).  

---

## Descripci칩n del problema  

Se desea confeccionar una **aplicaci칩n web** que d칠 como soluci칩n un sistema para gestionar la generaci칩n autom치tica de los ex치menes dentro de una instituci칩n educativa.  

La soluci칩n tendr치 que:  
- Administrar las preguntas de examen, las asignaturas y los temas/subtemas.  
- Gestionar profesores (crear/validar ex치menes).  
- Gestionar estudiantes que realizar치n los ex치menes.  
- Adaptar los ex치menes a criterios preestablecidos:  
  - Grado de dificultad.  
  - Tipo de pregunta.  
  - Distribuci칩n de los temas.  

### Funcionalidades clave:  

- Los profesores podr치n ingresar preguntas al banco de preguntas.  
- Clasificaci칩n de preguntas por **tema** y **tipo** (opci칩n m칰ltiple, verdadero/falso, ensayo).  
- Asignaci칩n de **nivel de dificultad** (f치cil, medio, dif칤cil).  
- Generaci칩n autom치tica de ex치menes a partir de par치metros.  
- Visualizaci칩n de ex치menes creados por otros profesores de la misma asignatura.  
- Evitar duplicados de preguntas y asignaciones incorrectas.  

### Para estudiantes:  
- Acceder a los ex치menes asignados.  
- Almacenamiento de respuestas.  
- Consultar calificaciones.  
- Solicitar recalificaci칩n indicando profesor.  

### Para el sistema:  
- Guardar en base de datos todos los procesos (incluyendo recalificaciones).  
- Reportes de:  
  - Creaci칩n de ex치menes.  
  - Preguntas m치s utilizadas.  
  - Distribuci칩n de dificultades.  
  - Desempe침o de estudiantes seg칰n dificultad.  

---

## Funcionalidades a implementar  

1. Listar ex치menes generados autom치ticamente para una asignatura espec칤fica.  
2. Obtener preguntas m치s utilizadas en ex치menes finales (por dificultad y tema).  
3. Listar ex치menes validados por un revisor (fecha y observaciones).  
4. Generar reporte sobre desempe침o de estudiantes en un examen (clasificaci칩n por dificultad).  
5. Determinar correlaci칩n entre dificultad de preguntas y rendimiento promedio de estudiantes.  
   - Identificar 10 preguntas con mayor tasa de reprobaci칩n.  
   - Indicar profesor que las cre칩.  
   - Comparar desempe침o con estudiantes que solicitaron recalificaci칩n.  
6. Comparar ex치menes de diferentes asignaturas (distribuci칩n de preguntas por tema/dificultad).  
7. Registro detallado de profesores que han revisado ex치menes en los 칰ltimos dos semestres.  

**Nota:** El sistema debe permitir exportar reportes en **PDF** y ordenar columnas de resultados.  

---

## Requisitos particulares de la asignatura de Ingenier칤a de Software  

Adem치s de la implementaci칩n de la aplicaci칩n web, las evaluaciones incluir치n seminarios y preguntas escritas.  

### Requerimientos para calificaci칩n:  

1. Uso de **control de versiones** (GitHub, TFS, etc.).  
2. Planificaci칩n con alguna herramienta CASE (GitHub, Jira, Gantt, etc.).  
3. Sistema **multiplataforma**.  
4. Cumplir con todos los requerimientos funcionales.  
5. Buenas pr치cticas de programaci칩n (incluyendo **docstrings** en el c칩digo).  
6. Implementar al menos **dos patrones de dise침o**.  
7. Arquitectura desacoplada, extensible y mantenible.  
8. Pruebas unitarias para backend y frontend.  

游늷 **Importante:** Para aprobar la asignatura es indispensable cumplir con los **primeros seis puntos**.  

---
